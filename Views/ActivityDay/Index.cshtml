@using FamilyActivity.WebMvc.Models;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<FamilyActivity.WebMvc.Models.ViewActivityDays>

<link href="~/css/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewData["Title"] = "Home Page";
}

<h2>Activity days</h2>

    @foreach (var item in Model)
    {
        <div class="row-md-4 col-xs-6 border-primary mb-3">
            <div class="card mb-3" style="max-width: 540px;">
                <div class="row g-0">
                    <div class="rows-md-12">
                        <div class="card-header text-white bg-info">
                            <p class="card-text">
                                <h5 class="card-title">
                                    @item.Description.ToUpper()
@*                                    @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                                    {
                                        
                                    }*@

                                    <a class="text-white float-right" asp-action="Edit" asp-route-id="@item.Id"><i class="bi bi-pencil-square"></i></a>

                                </h5>
                            </p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <img src="@item.Picture" width="100%" alt="@item.Picture">
                    </div>
                    <div class="col-md-6">
                        <div class="card-body">
                            <p class="card-text">@item.Description</p>
                            <p class="card-text"><b>Description: </b>@item.Description</p>
                            <p class="card-text"><b>Start Time: </b>@item.StartTime.ToString("hh : mm")</p>
                            <p class="card-text"><b>End Time: </b>@item.EndTime.ToString("hh : mm")</p>
                            <p class="card-text"><b>Day of week: </b>@item.DaysOfWeek.ToString()</p>
                            <p class="card-text ">
                                <b>Status: </b>
                                @if (DateTime.Now >= item.StartTime && DateTime.Now <= item.EndTime)
                                {
                                    <span class="badge bg-success text-white">AVAILABLE</span>
                                }
                                else if (DateTime.Now > item.EndTime)
                                {
                                    <span class="badge bg-danger text-white">EXPIRED</span>
                                }
                                else
                                {
                                    <span class="badge bg-primary text-white">UPCOMING</span>
                                }
                            </p>

                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="card-footer ">
                            <p class="card-text">
                                <a class="btn btn-outline-primary float-right" asp-action="Details" asp-route-id="@item.Id">
                                    <i class="bi bi-eye-fill"></i> Show Details
                                </a>
                                <a class="btn btn-success text-white @((DateTime.Now > item.EndTime) ? "enabled" : "")"
                               asp-controller="ActivityDay"
                               asp-action="Edit"
                               asp-route-id="@item.Id">
                                    <i class="bi bi-cart-plus"></i> Edit
                                </a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",new { page }))























@* <table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Picture)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table> *@
